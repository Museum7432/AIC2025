services:
  backend-api:
    # tty: true
    depends_on:
      elasticsearch:
        condition: service_healthy
        restart: true

    environment:
    
      - APP_NAME=ELO@AIC Image Semantic Search
      - gpt_translate_model=gpt-4o-mini
      - ocr_path=/data/embeddings/OCR_results
      - object_counting_path=/data/embeddings/obj_cnt_data
      # empty string to deactivate
      - asr_path=/data/embeddings/asr_processed
      - blip2_embs_path=
      - clip_H_embs_path=/data/embeddings/keyframes_embs_clip_H
      - clip_bigG_embs_path=/data/embeddings/keyframes_embs_clip_BigG2B
      - clip_B32_embs_path=
      - clip_S400M_embs_path=/data/embeddings/keyframes_embs_clip_S400M

      # read from the .env file if exist
      - openai_api_key=${openai_api_key}

      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}

    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - 8000:8000

    volumes:
      - ./src:/src
      - ./data:/data

      - ~/.cache/huggingface:/root/.cache/huggingface
      - ~/.cache/torch:/root/.cache/torch
      - ~/.cache/clip:/root/.cache/clip

    networks:
      - project_network

    # remove the reload flag on production
    entrypoint: >
      conda run --no-capture-output -n py311 python -u -m uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload


  elasticsearch:
    build:
      context: ./elasticsearch_VN
      args:
        ES_VERSION: "8.7.0"
    restart: on-failure

    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 5s
      timeout: 10s
      retries: 50
      start_period: 15s

    # port should only be open for debugging
    # and be closed in production
    ports:
      - 9200:9200
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    
    # disabled for docker rootless
    #   memlock:
    #     hard: -1
    #     soft: -1
    environment:
      ES_JAVA_OPTS: "-Xmx2g -Xms2g"
      ELASTIC_USERNAME: "elastic"
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      bootstrap.memory_lock: "true"
      discovery.type: "single-node"
      xpack.security.enabled: "true"
    networks:
      - project_network

networks:
  project_network:
